{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GrifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","propType","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GrifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAK,OAAOP,GAAP,mBAAuBO,OAC3CN,EAAc,MAKlB,SACG,uBACKO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAuB/BZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,mCChCrBC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAWH,GAF/C,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KACFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAZM,kBAaXA,GAbW,4CAAH,sDCENS,EAAc,SAAC,GAAkB,IAAjBL,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OADAa,QAAQC,IAAId,GAER,sBAAKgB,UAAU,2DAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,SCHHS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEtB,ECHuB,SAACA,GAExB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACN1B,EAAOC,GAAU0B,MAAK,SAAAC,GACdH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDbwBK,CAAY5B,GAA/Ba,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDlB,KAEnDsB,GAAW,mBAAGJ,UAAU,oCAAb,0BAEb,qBAAKA,UAAU,YAAf,SAEYL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEdvBkB,EAAe,WAEzB,MAAoC/C,mBAAS,CAAC,iBAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCZjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.09d44365.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleValueChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( categ => [  inputValue , ...categ ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n           <input \r\n                type='text'\r\n                value={ inputValue}\r\n                onChange={ handleValueChange }\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGif = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category) }&limit=10&api_key=Lqcz9Q8sCtOKRPbRYv6Cl9cALJatx8qZ`;\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n    const gif = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })        \r\n    console.log(gif)\r\n    return gif;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log(url) \r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__repeat-1'>   \r\n           <img src={url} alt={title} />\r\n           <p> {title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GrifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__bounce'> { category }</h3>\r\n            {\r\n              loading && <p className='animate__animated animate__bounce'>Cargando....</p>\r\n            }\r\n            <div className='card-grid'>\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category).then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GrifGrid } from './components/GrifGrid';\r\n\r\nexport const  GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball ']);\r\n    \r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GrifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';  \nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp /> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}